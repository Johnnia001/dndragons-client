{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Home.js","components/Character/AbilityScore.js","api/character.js","components/Character/Character.js","components/Character/Characters.js","components/Character/CharacterEdit.js","components/Character/CharacterCreate.js","components/Form.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","user","to","unauthenticatedOptions","alwaysOptions","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","AbilityCreate","character","setCharacter","FloatingLabel","label","as","aria-label","strength","indexCharacters","get","getOneCharacter","createCharacter","editCharacter","level","exp","charClass","race","alignment","background","charDetails","deleteCharacter","Character","deleted","useParams","fetchData","onDeleteCharacter","then","onClick","Spinner","animation","role","Characters","characters","fetchCharacter","charactersList","map","CharacterEdit","setName","setLevel","setExp","setCharClass","setRace","setAlignment","setBackground","updated","setUpdated","onCharacterEdit","CharacterCreate","CharForm","page","setPage","onCharacterCreate","FormTitles","width","disabled","currPage","length","App","msgAlerts","setMsgAlerts","uuid","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d96c7942.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = ({ user }) => {\n  if (user) {\n    return (\n      <Fragment>\n        <NavLink to='/change-password' className='nav-link'>\n          Change Password\n        </NavLink>\n        <NavLink to='/sign-out' className='nav-link'>\n          Sign Out\n        </NavLink>\n        <NavLink to={'/characters'} className='nav-link'>\n          My characters\n        </NavLink>\n        <NavLink to='/characters/create' className='nav-link'>\n          Create Character\n        </NavLink>\n      </Fragment>\n    )\n  }\n}\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>\n      Sign Up\n    </NavLink>\n    <NavLink to='/sign-in' className='nav-link'>\n      Sign In\n    </NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink to='/' className='nav-link'>\n      Home\n    </NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n        Critical Characters\n      </Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions({ user }) : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://critical-character.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-pw/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess =\n  'Succesfully registered! Youve been signed in as well.'\nexport const signUpFailure =\n  'Registration failed. Email may be taken, or passwords dont match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure =\n  'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure =\n  'Failed to change passwords. Check your old password and try again.'\nexport const characterCreateSuccess =\n  'Profile created successfully! Get busy chatting!'\nexport const characterCreateFailure =\n  'Failed to create a character. Please check your inputs and try again.'\nexport const characterEditSuccess =\n  'Profile successfully updated! Get busy chatting!'\nexport const characterEditFailure =\n  'Failed to update your character. Please check inputs and try again.'\nexport const characterDeleteSuccess =\n  'Profile successfully deleted. Sad to see you go!'\nexport const characterFindError =\n  'Uh oh. We couldnt find the character you were looking for'\nexport const abilityCreateSuccess =\n  'Profile successfully deleted. Sad to see you go!'\nexport const abilityCreateFailure =\n  'Uh oh. We couldnt find the character you were looking for'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <>\n      <div className='title'>\n        <h1>Character</h1>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\n// import { Navigate } from 'react-router-dom'\n// import { createAbility } from '../../api/ability'\n\nimport Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\n\nconst AbilityCreate = ({ character, setCharacter }) => {\n  // const [strength, setStrength] = useState('')\n  /* const [dexterity, setDexterity] = useState('')\n  const [constitution, setConstitution] = useState('')\n  const [intelligence, setIntelligence] = useState('')\n  const [wisdom, setWisdom] = useState('')\n  const [charisma, setCharisma] = useState('') */\n  // const [shouldNavigate, setShouldNavigate] = useState(false)\n  // if (!user) {\n  //   return <Navigate to='/' />\n  // }\n\n  // const AbilityCreate = async event => {\n  //  event.preventDefault()\n\n  //   try {\n  //     await createAbility(\n  //       user,\n  //       strength\n  //       /* dexterity,\n  //       constitution,\n  //       intelligence,\n  //       wisdom,\n  //       charisma */\n  //     ).then(res => {\n  //       user.ability = res.data.ability\n  //     })\n  //     msgAlert({\n  //       heading: 'Ability Creation Success',\n  //       message: abilityCreateSuccess,\n  //       variant: 'success'\n  //     })\n  //     setShouldNavigate(true)\n  //   } catch (error) {\n  //     msgAlert({\n  //       heading: 'Ability Creation failed with error: ' + error.message,\n  //       message: abilityCreateFailure,\n  //       variant: 'danger'\n  //     })\n  //     setStrength('')\n  //   }\n  // }\n\n  // if (shouldNavigate) {\n  //   return <Navigate to='/' />\n  // }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Ability Scores</h3>\n        <h2>\n          Your character’s ability scores represent how well your character\n          performs in six distinct areas\n        </h2>\n\n        <Form>\n          <FloatingLabel\n            controlId='floatingSelectGrid'\n            label='Works with selects'\n          >\n            <Form.Control\n              as='select'\n              type='strength'\n              aria-label='Alignment'\n              required\n              value={character.strength}\n              onChange={event =>\n                setCharacter(character => ({ ...character, strength: event.target.value }))\n              }\n            >\n              <option>Strength</option>\n              <option value='Ability Score: 2-3 Modifier: -4'>\n                Ability Score: 2-3 Modifier: -4\n              </option>\n              <option value='Ability Score: 4-5 Modifier: -3'>\n                Ability Score: 4-5 Modifier: -3\n              </option>\n              <option value='Ability Score: 6-7 Modifier: -2'>\n                Ability Score: 6-7 Modifier: -2\n              </option>\n              <option value='Ability Score: 8-9 Modifier: -1'>\n                Ability Score: 8-9 Modifier: -1\n              </option>\n              <option value='Ability Score: 10-11 Modifier: +0'>\n                Ability Score: 10-11 Modifier: +0\n              </option>\n              <option value='Ability Score: 12-13 Modifier: +1'>\n                Ability Score:Ability Score: 12-13 Modifier: +1\n              </option>\n              <option value='Ability Score: 14-15 Modifier: +2'>\n                Ability Score: 14-15 Modifier: +2\n              </option>\n              <option value='Ability Score: 16-17 Modifier: +3'>\n                Ability Score: 16-17 Modifier: +3\n              </option>\n              <option value='Ability Score: 18-19 Modifier: +4'>\n                Ability Score: 18-19 Modifier: +4\n              </option>\n              <option value='Ability Score: 20+ Modifier: +5'>\n                Ability Score: 20+ Modifier: +5\n              </option>\n            </Form.Control>\n          </FloatingLabel>\n          {/* <Button variant='primary' type='submit'>\n            Submit\n  </Button> */}\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default AbilityCreate\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const indexCharacters = user => {\n  return axios.get(apiUrl + '/characters/', {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n\nexport const getOneCharacter = (id, user) => {\n  return axios.get(`${apiUrl}/characters/${id}/`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\nexport const createCharacter = (user, character) => {\n  return axios.post(\n    `${apiUrl}/characters/create/`,\n    {\n      character\n    },\n\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const editCharacter = (\n  user,\n  id,\n  name,\n  level,\n  exp,\n  charClass,\n  race,\n  alignment,\n  background,\n  strength\n) => {\n  const charDetails = {\n    user\n  }\n  if (name !== '') {\n    charDetails.name = name\n  }\n  if (level !== '') {\n    charDetails.level = level\n  }\n  if (exp !== '') {\n    charDetails.exp = exp\n  }\n  if (charClass !== '') {\n    charDetails.charClass = charClass\n  }\n  if (race !== '') {\n    charDetails.race = race\n  }\n  if (alignment !== '') {\n    charDetails.alignment = alignment\n  }\n  if (background !== '') {\n    charDetails.background = background\n  }\n  if (strength !== '') {\n    charDetails.strength = strength\n  }\n  return axios.patch(\n    `${apiUrl}/characters/${id}/`,\n    {\n      character: charDetails\n    },\n    {\n      headers: {\n        Authorization: `Token ${user.token}`\n      }\n    }\n  )\n}\n\nexport const deleteCharacter = (user, id) => {\n  return axios.delete(`${apiUrl}/characters/${id}`, {\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, Navigate, useParams } from 'react-router-dom'\nimport { Spinner, Button } from 'react-bootstrap'\n\nimport { deleteCharacter, getOneCharacter } from '../../api/character'\nimport { characterDeleteSuccess } from '../AutoDismissAlert/messages'\n\nconst Character = ({ user, msgAlert }) => {\n  const [character, setCharacter] = useState(null)\n  const [deleted] = useState(false)\n  const { id } = useParams()\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await getOneCharacter(id, user)\n        setCharacter(res.data.character)\n      } catch (error) {\n        msgAlert({\n          heading: 'Character failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const onDeleteCharacter = async () => {\n    try {\n      await deleteCharacter(user, id).then(\n        delete user.character,\n        setShouldNavigate(true),\n        msgAlert({\n          heading: 'Character Deleted Successfully',\n          message: characterDeleteSuccess,\n          variant: 'success'\n        })\n      )\n    } catch (error) {\n      msgAlert({\n        heading: 'Delete Character failed with error: ',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  // 3 states:\n  // If character is `null`, we are loading\n  if (!character) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  } else if (deleted) {\n    return <Navigate to='/characters' />\n  } else {\n    // We have a character, display it!\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>{character.name}</h3>\n          <p>Level: {character.level}</p>\n          <p>EXP:{character.exp}</p>\n          <p>{character.charClass}</p>\n          <p>{character.race}</p>\n          <p>{character.alignment}</p>\n          <p>{character.background}</p>\n          <p>{character.strength}</p>\n\n          <Button variant='danger' onClick={onDeleteCharacter}>\n            Delete Character\n          </Button>\n          <Link to={`/characters/${id}/edit`}>\n            <Button variant='primary' type='submit'>\n              Update Character\n            </Button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Character\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, Link } from 'react-router-dom'\nimport { indexCharacters } from '../../api/character'\nimport { Spinner } from 'react-bootstrap'\n\nimport Button from 'react-bootstrap/Button'\nimport { characterFindError } from '../AutoDismissAlert/messages'\n\nconst Characters = ({ user, msgAlert }) => {\n  const [characters, setCharacter] = useState(null)\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      try {\n        await indexCharacters(user).then(res =>\n          setCharacter(res.data.characters)\n        )\n      } catch (error) {\n        msgAlert({\n          heading: 'Finding Character failed with error: ',\n          message: characterFindError,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchCharacter()\n  }, [])\n\n  // const onDeleteCharacter = async () => {\n  //   try {\n  //     await deleteCharacter(user, id).then(\n  //       delete user.character,\n  //       setShouldNavigate(true),\n  //       msgAlert({\n  //         heading: 'Character Deleted Successfully',\n  //         message: characterDeleteSuccess,\n  //         variant: 'success'\n  //       })\n  //     )\n  //   } catch (error) {\n  //     msgAlert({\n  //       heading: 'Delete Character failed with error: ',\n  //       message: error.message,\n  //       variant: 'danger'\n  //     })\n  //   }\n  // }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  if (characters === null) {\n    return (\n      <>\n        <h4>Fetching Character</h4>\n        <Spinner animation='border' role='status'>\n          <span className='visually-hidden'>Loading...</span>\n        </Spinner>\n        <Button\n          onClick={() => setShouldNavigate(true)}\n          variant='primary'\n          type='button'\n        >\n          Return Home\n        </Button>\n      </>\n    )\n  } else {\n    const charactersList = characters.map(character => (\n      <li key={character.id}>\n        <Link to={`/characters/${character.id}`}>{character.name}</Link>\n      </li>\n    ))\n    return (\n      <>\n        <h4>Characters</h4>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <ul>{charactersList}</ul>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Characters\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { editCharacter, getOneCharacter } from '../../api/character'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {\n  characterEditSuccess,\n  characterEditFailure\n} from '../AutoDismissAlert/messages'\n\nconst CharacterEdit = ({ user, msgAlert }) => {\n  const [name, setName] = useState('')\n  const [level, setLevel] = useState('')\n  const [exp, setExp] = useState('')\n  const [charClass, setCharClass] = useState('')\n  const [race, setRace] = useState('')\n  const [alignment, setAlignment] = useState('')\n  const [background, setBackground] = useState('')\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams()\n  const [character, setCharacter] = useState({})\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await getOneCharacter(id, user)\n        setCharacter(res.data.character)\n        setName(character.name)\n      } catch (error) {\n        msgAlert({\n          heading: 'Character failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const onCharacterEdit = async event => {\n    event.preventDefault()\n\n    try {\n      await editCharacter(\n        user,\n        id,\n        name,\n        level,\n        exp,\n        charClass,\n        race,\n        alignment,\n        background\n      )\n      msgAlert({\n        heading: 'Character Edit Success',\n        message: characterEditSuccess,\n        variant: 'success'\n      })\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Character Edit failed with error: ' + error.message,\n        message: characterEditFailure,\n        variant: 'danger'\n      })\n      setName('')\n      setLevel('')\n      setExp('')\n      setCharClass('')\n      setRace('')\n      setAlignment('')\n      setBackground('')\n    }\n  }\n\n  if (updated) {\n    return <Navigate to={`/characters/${id}`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Edit Your Character</h3>\n\n        <Form onSubmit={onCharacterEdit}>\n          <Form.Group className='mb-3' controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              name='name'\n              placeholder={character.name}\n              value={name}\n              onChange={event => setName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className='mb-4' controlId='level'>\n            <Form.Label>Level</Form.Label>\n            <Form.Control\n              value={level}\n              name='level'\n              type='level'\n              placeholder={character.level}\n              onChange={event => setLevel(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className='mb-4' controlId='exp'>\n            <Form.Label>Experience Points</Form.Label>\n            <Form.Control\n              value={exp}\n              name='exp'\n              type='exp'\n              placeholder={character.exp}\n              onChange={event => setExp(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Control\n            aria-label='charClass'\n            as='select'\n            name='charClass'\n            value={charClass}\n            type='charClass'\n            onChange={event => setCharClass(event.target.value)}\n          >\n            <option>{character.charClass}</option>\n            <option value='Artificer'>Artificer</option>\n            <option value='Barbarian'>Barbarian</option>\n            <option value='Bard'>Bard</option>\n            <option value='Blood Hunter'>Blood Hunter</option>\n            <option value='Cleric'>Cleric</option>\n            <option value='Druid'>Druid</option>\n            <option value='Fighter'>Fighter</option>\n            <option value='Monk'>Monk</option>\n            <option value='Paladin'>Paladin</option>\n            <option value='Ranger'>Ranger</option>\n            <option value='Rogue'>Rogue</option>\n            <option value='Sorcerer'>Sorcerer</option>\n            <option value='Warlock'>Warlock</option>\n            <option value='Wizard'>Wizard</option>\n          </Form.Control>\n          <Form.Control\n            aria-label='Race'\n            as='select'\n            name='race'\n            value={race}\n            type='race'\n            onChange={event => setRace(event.target.value)}\n          >\n            <option>{character.race}</option>\n            <option value='Dragon Born'>Dragon Born</option>\n            <option value='Dwarf'>Dwarf</option>\n            <option value='Elf'>Elf</option>\n            <option value='Gnome'>Gnome</option>\n            <option value='Half Elf'>Half Elf</option>\n            <option value='Halfling'>Halfling</option>\n            <option value='Half-Orc'>Half-Orc</option>\n            <option value='Human'>Human</option>\n            <option value='Tiefling'>Tiefling</option>\n          </Form.Control>\n\n          <Form.Control\n            as='select'\n            name='alignment'\n            value={alignment}\n            type='alignment'\n            onChange={event => setAlignment(event.target.value)}\n            aria-label='Alignment'\n          >\n            <option>{character.alignment}</option>\n            <option value='Lawful Good'>Lawful Good</option>\n            <option value='Neutral Good'>Neutral Good</option>\n            <option value='Chaotic Good'>Chaotic Good</option>\n            <option value='Lawful Neutral'>Lawful Neutral</option>\n            <option value='True Neutral'>True Neutral</option>\n            <option value='Chaotic Neutral'>Chaotic Neutral</option>\n            <option value='Lawful Evil'>Lawful Evil</option>\n            <option value='Neutral Evil'>Neutral EVil</option>\n            <option value='Chaotic Evil'>Chaotic Evil</option>\n            <option value='Unaligned'>Unaligned</option>\n          </Form.Control>\n          <Form.Group className='mb-4' controlId='background'>\n            <Form.Label>Background</Form.Label>\n            <Form.Control\n              value={background}\n              name='background'\n              type='background'\n              placeholder={character.background}\n              onChange={event => setBackground(event.target.value)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterEdit\n","import React from 'react'\n// import { Navigate } from 'react-router-dom'\n// import { createCharacter } from '../../api/character'\n// import CharForm form '../Form'\nimport Form from 'react-bootstrap/Form'\n// // import Button from 'react-bootstrap/Button'\n// import {\n//   characterCreateSuccess,\n//   characterCreateFailure\n// } from '../AutoDismissAlert/messages'\n\nconst CharacterCreate = ({ character, setCharacter }) => {\n  // const [name, setName] = useState('')\n  // const [level, setLevel] = useState('')\n  // const [exp, setExp] = useState('')\n  // const [charClass, setCharClass] = useState('')\n  // const [race, setRace] = useState('')\n  // const [alignment, setAlignment] = useState('')\n  // const [background, setBackground] = useState('')\n  // const [setShouldNavigate] = useState(false)\n\n  // if (!user) {\n  //   return <Navigate to='/' />\n  // }\n\n  // const onCharacterCreate = async event => {\n  //   event.preventDefault()\n\n  //   try {\n  //     await createCharacter(\n  //       user,\n  //       name,\n  //       level,\n  //       exp,\n  //       charClass,\n  //       race,\n  //       alignment,\n  //       background\n  //     ).then(res => {\n  //       user.character = res.data.character\n  //     })\n  //     msgAlert({\n  //       heading: 'Character Creation Success',\n  //       message: characterCreateSuccess,\n  //       variant: 'success'\n  //     })\n  //     setShouldNavigate(true)\n  //   } catch (error) {\n  //     msgAlert({\n  //       heading: 'Character Creation failed with error: ' + error.message,\n  //       message: characterCreateFailure,\n  //       variant: 'danger'\n  //     })\n  //     setName('')\n  //     setLevel('')\n  //     setExp('')\n  //     setCharClass('')\n  //     setRace('')\n  //     setAlignment('')\n  //     setBackground('')\n  //   }\n  // }\n\n  // if (shouldNavigate) {\n  //   return <Navigate to= {'/characters'} />\n  // }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Character Information</h3>\n\n        <Form>\n          <Form.Group className='mb-3' controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              name='name'\n              placeholder='Character Name'\n              required\n              value={character.name}\n              onChange={event =>\n                setCharacter(character => ({ ...character, name: event.target.value }))\n              }\n            />\n          </Form.Group>\n          <Form.Group className='mb-4' controlId='level'>\n            <Form.Label>Level</Form.Label>\n            <Form.Control\n              required\n              name='level'\n              type='level'\n              placeholder='Check with your DM what level you are starting at.'\n              value={character.level}\n              onChange={event =>\n                setCharacter(character => ({ ...character, level: event.target.value }))\n              }\n            />\n          </Form.Group>\n          <Form.Group className='mb-4' controlId='exp'>\n            <Form.Label>Experience Points</Form.Label>\n            <Form.Control\n              required\n              name='exp'\n              type='exp'\n              placeholder='Check with your DM how much EXP you are starting at.'\n              value={character.exp}\n              onChange={event =>\n                setCharacter(character => ({\n                  ...character,\n                  exp: event.target.value\n                }))\n              }\n            />\n          </Form.Group>\n          <Form.Control\n            aria-label='charClass'\n            as='select'\n            required\n            name='charClass'\n            type='charClass'\n            value={character.charClass}\n            onChange={event =>\n              setCharacter(character => ({\n                ...character,\n                charClass: event.target.value\n              }))\n            }\n          >\n            <option>Class ▿</option>\n            <option value='Artificer'>Artificer</option>\n            <option value='Barbarian'>Barbarian</option>\n            <option value='Bard'>Bard</option>\n            <option value='Blood Hunter'>Blood Hunter</option>\n            <option value='Cleric'>Cleric</option>\n            <option value='Druid'>Druid</option>\n            <option value='Fighter'>Fighter</option>\n            <option value='Monk'>Monk</option>\n            <option value='Paladin'>Paladin</option>\n            <option value='Ranger'>Ranger</option>\n            <option value='Rogue'>Rogue</option>\n            <option value='Sorcerer'>Sorcerer</option>\n            <option value='Warlock'>Warlock</option>\n            <option value='Wizard'>Wizard</option>\n          </Form.Control>\n          <Form.Control\n            aria-label='Race'\n            required\n            as='select'\n            name='race'\n            type='race'\n            value={character.race}\n            onChange={event =>\n              setCharacter(character => ({\n                ...character,\n                race: event.target.value\n              }))\n            }\n          >\n            <option>Race ▿</option>\n            <option value='Dragon Born'>Dragon Born</option>\n            <option value='Dwarf'>Dwarf</option>\n            <option value='Elf'>Elf</option>\n            <option value='Gnome'>Gnome</option>\n            <option value='Half Elf'>Half Elf</option>\n            <option value='Halfling'>Halfling</option>\n            <option value='Half-Orc'>Half-Orc</option>\n            <option value='Human'>Human</option>\n            <option value='Tiefling'>Tiefling</option>\n          </Form.Control>\n\n          <Form.Control\n            required\n            as='select'\n            name='alignment'\n            type='alignment'\n            aria-label='Alignment'\n            value={character.alignment}\n            onChange={event =>\n              setCharacter(character => ({ ...character, alignment: event.target.value }))\n            }\n          >\n            <option>Alignment ▿</option>\n            <option value='Lawful Good'>Lawful Good</option>\n            <option value='Neutral Good'>Neutral Good</option>\n            <option value='Chaotic Good'>Chaotic Good</option>\n            <option value='Lawful Neutral'>Lawful Neutral</option>\n            <option value='True Neutral'>True Neutral</option>\n            <option value='Chaotic Neutral'>Chaotic Neutral</option>\n            <option value='Lawful Evil'>Lawful Evil</option>\n            <option value='Neutral Evil'>Neutral EVil</option>\n            <option value='Chaotic Evil'>Chaotic Evil</option>\n            <option value='Unaligned'>Unaligned</option>\n          </Form.Control>\n          <Form.Group className='mb-4' controlId='background'>\n            <Form.Label>Background</Form.Label>\n            <Form.Control\n              required\n              name='background'\n              type='background'\n              placeholder='Gives you special bonuses based on your choice'\n              value={character.background}\n              onChange={event =>\n                setCharacter(character => ({ ...character, background: event.target.value }))\n              }\n            />\n          </Form.Group>\n          {/* <Button variant='primary' type='submit'>\n            Next\n  </Button> */}\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCreate\n","import React, { useState } from 'react'\nimport CharacterCreate from './Character/CharacterCreate'\nimport AbilityCreate from './Character/AbilityScore'\nimport { Navigate } from 'react-router-dom'\nimport { createCharacter } from '../api/character'\n\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\nimport {\n  characterCreateSuccess,\n  characterCreateFailure\n} from './AutoDismissAlert/messages'\n\nconst CharForm = ({ user, setUser, msgAlert }) => {\n  const [page, setPage] = useState(0)\n  const [setShouldNavigate] = useState(false)\n  const [character, setCharacter] = useState({\n    name: '',\n    level: '',\n    exp: '',\n    charClass: '',\n    race: '',\n    alignment: '',\n    background: '',\n    strength: ''\n  })\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  const onCharacterCreate = async event => {\n    event.preventDefault()\n\n    try {\n      await createCharacter(user, character).then(res => {\n        user.character = res.data.character\n      })\n      msgAlert({\n        heading: 'Character Creation Success',\n        message: characterCreateSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Character Creation failed with error: ' + error.message,\n        message: characterCreateFailure,\n        variant: 'danger'\n      })\n      setCharacter('')\n    }\n  }\n  // if (shouldNavigate) {\n  //   return <Navigate to={'/characters'} />\n  // }\n  const FormTitles = ['Character Information', 'Ability Scores']\n\n  const PageDisplay = () => {\n    if (page === 0) {\n      return (\n        <CharacterCreate character={character} setCharacter={setCharacter} />\n      )\n    } else if (page === 1) {\n      return <AbilityCreate character={character} setCharacter={setCharacter} />\n    } else {\n      return <h1>hi</h1>\n    }\n  }\n\n  return (\n    <div className='form'>\n      <div className='progressbar'>\n        <div\n          style={{\n            width: page === 0 ? '33.3%' : page === 1 ? '66.6%' : '100%'\n          }}\n        ></div>\n      </div>\n      <div className='form-container'>\n        <div className='header'>\n          <h1>{FormTitles[page]}</h1>\n        </div>\n        <div className='body'>{PageDisplay()}</div>\n        <div className='footer'>\n          <button\n            disabled={page === 0}\n            onClick={() => {\n              setPage(currPage => currPage - 1)\n            }}\n          >\n            Prev\n          </button>\n          <button\n            onClick={() => {\n              if (page === FormTitles.length - 1) {\n                onCharacterCreate()\n                console.log(character)\n              } else {\n                setPage(currPage => currPage + 1)\n              }\n            }}\n          >\n            {page === FormTitles.length - 1 ? 'Submit' : 'Next'}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CharForm\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Home from './components/Home'\nimport AbilityCreate from './components/Character/AbilityScore'\nimport Character from './components/Character/Character'\nimport Characters from './components/Character/Characters'\n// import CharacterCreate from './components/Character/CharacterCreate'\nimport CharacterEdit from './components/Character/CharacterEdit'\nimport CharForm from './components/Form'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => [...msgAlerts, { heading, message, variant, id }])\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out'\n            element={\n              <SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />\n            }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/characters'\n            element={<Characters user={user} msgAlert={msgAlert} />}\n          />\n          <Route\n            path='/characters/:id'\n            element={<Character user={user} msgAlert={msgAlert} />}\n          />\n          <Route\n            path='/characters/:id/edit'\n            element={<CharacterEdit user={user} msgAlert={msgAlert} />}\n          />\n          <Route\n            path='/characters/create'\n            element={\n              <CharForm\n                user={user}\n                setUser={setUser}\n                msgAlert={msgAlert}\n              />\n            }\n          />\n          <Route\n            path='/characters/ability/:id'\n            element={\n              <AbilityCreate\n                user={user}\n                setUser={setUser}\n                msgAlert={msgAlert}\n              />\n            }\n          />\n          <Route path='/' element={<Home />} />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}